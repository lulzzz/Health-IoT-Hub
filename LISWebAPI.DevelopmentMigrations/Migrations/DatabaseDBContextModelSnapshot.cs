// <auto-generated />
using System;
using LISWebAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LISWebAPI.Migrations
{
    [DbContext(typeof(DatabaseDBContext))]
    partial class DatabaseDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LISWebAPI.Data.ogtt.OgttReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClientId")
                        .HasMaxLength(50);

                    b.Property<string>("Doctor")
                        .HasMaxLength(50);

                    b.Property<string>("GlucoseAmount")
                        .HasMaxLength(50);

                    b.Property<int>("PatientId");

                    b.Property<DateTime>("ReportDate");

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.ToTable("lisc_ogttReport");
                });

            modelBuilder.Entity("LISWebAPI.Data.ogtt.OgttResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClientId")
                        .HasMaxLength(50);

                    b.Property<string>("NormalRange")
                        .HasMaxLength(150);

                    b.Property<int>("OgttReportId");

                    b.Property<int>("ResultId");

                    b.Property<string>("ResultTitle")
                        .HasMaxLength(50);

                    b.Property<string>("UrineGlucose")
                        .HasMaxLength(50);

                    b.Property<string>("UrineKetone")
                        .HasMaxLength(50);

                    b.Property<string>("UrineProtein")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("OgttReportId");

                    b.HasIndex("ResultId");

                    b.ToTable("lisc_ogttReportResult");
                });

            modelBuilder.Entity("RCL.LISConnector.DataEntity.SQL.DiagnosticReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AnalyzerDateTime");

                    b.Property<string>("AnalyzerName")
                        .HasMaxLength(50);

                    b.Property<string>("ClientId")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DateOfBirth");

                    b.Property<string>("FamilyName")
                        .HasMaxLength(50);

                    b.Property<string>("GivenName")
                        .HasMaxLength(50);

                    b.Property<string>("OperatorId")
                        .HasMaxLength(50);

                    b.Property<int>("PatientId");

                    b.Property<string>("PatientInternalId")
                        .HasMaxLength(50);

                    b.Property<string>("ReceivingApplication")
                        .HasMaxLength(50);

                    b.Property<string>("ReceivingFacility")
                        .HasMaxLength(50);

                    b.Property<string>("SendingApplication")
                        .HasMaxLength(50);

                    b.Property<string>("SendingFacility")
                        .HasMaxLength(50);

                    b.Property<string>("Sex")
                        .HasMaxLength(50);

                    b.Property<string>("TestCodes")
                        .HasMaxLength(250);

                    b.Property<string>("VisitId")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.ToTable("lisc_diagnosticReport");
                });

            modelBuilder.Entity("RCL.LISConnector.DataEntity.SQL.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNumber")
                        .HasMaxLength(50);

                    b.Property<bool>("Active");

                    b.Property<string>("Address")
                        .HasMaxLength(350);

                    b.Property<string>("AlternatePatientId")
                        .HasMaxLength(50);

                    b.Property<string>("Citizenship")
                        .HasMaxLength(50);

                    b.Property<string>("ClientId")
                        .HasMaxLength(50);

                    b.Property<string>("CountryCode")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DateOfBirth");

                    b.Property<string>("Discriminator")
                        .HasMaxLength(100);

                    b.Property<string>("DriversLicenseNumber")
                        .HasMaxLength(50);

                    b.Property<string>("ExternalPatientId")
                        .HasMaxLength(50);

                    b.Property<string>("FamilyName")
                        .HasMaxLength(50);

                    b.Property<string>("GivenName")
                        .HasMaxLength(50);

                    b.Property<string>("InternalPatientId")
                        .HasMaxLength(50);

                    b.Property<string>("MaritalStatus")
                        .HasMaxLength(50);

                    b.Property<string>("MiddleName")
                        .HasMaxLength(50);

                    b.Property<string>("NationalityCode")
                        .HasMaxLength(50);

                    b.Property<string>("PhoneNumberBusiness")
                        .HasMaxLength(50);

                    b.Property<string>("PhoneNumberHome")
                        .HasMaxLength(50);

                    b.Property<string>("PrimaryLanguage")
                        .HasMaxLength(50);

                    b.Property<string>("Race")
                        .HasMaxLength(50);

                    b.Property<string>("Religion")
                        .HasMaxLength(50);

                    b.Property<string>("SSNNumber")
                        .HasMaxLength(50);

                    b.Property<string>("Sex")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("lisc_patient");
                });

            modelBuilder.Entity("RCL.LISConnector.DataEntity.SQL.Result", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AbnormalFlags")
                        .HasMaxLength(50);

                    b.Property<string>("ClientId")
                        .HasMaxLength(50);

                    b.Property<string>("Comments")
                        .HasMaxLength(250);

                    b.Property<int>("DiagnosticReportId");

                    b.Property<string>("ReferenceRange")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ResultDateTime");

                    b.Property<string>("TestCode")
                        .HasMaxLength(50);

                    b.Property<string>("Units")
                        .HasMaxLength(50);

                    b.Property<string>("Value")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("DiagnosticReportId");

                    b.ToTable("lisc_result");
                });

            modelBuilder.Entity("RCL.LISConnector.DataEntity.SQL.TestCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClientId")
                        .HasMaxLength(50);

                    b.Property<string>("Code")
                        .HasMaxLength(50);

                    b.Property<string>("TestTitle")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("lisc_testCode");
                });

            modelBuilder.Entity("LISWebAPI.Data.ogtt.OgttReport", b =>
                {
                    b.HasOne("RCL.LISConnector.DataEntity.SQL.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LISWebAPI.Data.ogtt.OgttResult", b =>
                {
                    b.HasOne("LISWebAPI.Data.ogtt.OgttReport", "OgttReport")
                        .WithMany("OgttResults")
                        .HasForeignKey("OgttReportId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RCL.LISConnector.DataEntity.SQL.Result", "Result")
                        .WithMany()
                        .HasForeignKey("ResultId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RCL.LISConnector.DataEntity.SQL.DiagnosticReport", b =>
                {
                    b.HasOne("RCL.LISConnector.DataEntity.SQL.Patient", "Patient")
                        .WithMany("DiagnosticReports")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RCL.LISConnector.DataEntity.SQL.Result", b =>
                {
                    b.HasOne("RCL.LISConnector.DataEntity.SQL.DiagnosticReport", "DiagnosticReport")
                        .WithMany("Results")
                        .HasForeignKey("DiagnosticReportId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
